var crypto = require("crypto");
var promisify = require("./_promisify.js");
Object.defineProperties(module.exports, {
  Cipher: { enumerable: true, value: crypto.Cipher },
  Cipheriv: { enumerable: true, value: crypto.Cipheriv },
  Credentials: { enumerable: true, value: crypto.Credentials },
  DEFAULT_ENCODING: { enumerable: true, get: function() { return crypto.DEFAULT_ENCODING; }, set: function(v) { crypto.DEFAULT_ENCODING = v; } },
  Decipher: { enumerable: true, value: crypto.Decipher },
  Decipheriv: { enumerable: true, value: crypto.Decipheriv },
  DiffieHellman: { enumerable: true, value: crypto.DiffieHellman },
  DiffieHellmanGroup: { enumerable: true, value: crypto.DiffieHellmanGroup },
  Hash: { enumerable: true, value: crypto.Hash },
  Hmac: { enumerable: true, value: crypto.Hmac },
  Sign: { enumerable: true, value: crypto.Sign },
  Verify: { enumerable: true, value: crypto.Verify },
  //_getSecureOptions: // skipping
  createCipher: { enumerable: true, value: crypto.createCipher.bind(crypto) },
  createCipheriv: { enumerable: true, value: crypto.createCipheriv.bind(crypto) },
  createCredentials: { enumerable: true, value: crypto.createCredentials.bind(crypto) },
  createDecipher: { enumerable: true, value: crypto.createDecipher.bind(crypto) },
  createDecipheriv: { enumerable: true, value: crypto.createDecipheriv.bind(crypto) },
  createDiffieHellman: { enumerable: true, value: crypto.createDiffieHellman.bind(crypto) },
  createDiffieHellmanGroup: { enumerable: true, value: crypto.createDiffieHellmanGroup.bind(crypto) },
  createHash: { enumerable: true, value: crypto.createHash.bind(crypto) },
  createHmac: { enumerable: true, value: crypto.createHmac.bind(crypto) },
  createSign: { enumerable: true, value: crypto.createSign.bind(crypto) },
  createVerify: { enumerable: true, value: crypto.createVerify.bind(crypto) },
  getCiphers: { enumerable: true, value: crypto.getCiphers.bind(crypto) },
  getDiffieHellman: { enumerable: true, value: crypto.getDiffieHellman.bind(crypto) },
  getHashes: { enumerable: true, value: crypto.getHashes.bind(crypto) },
  pbkdf2: { enumerable: true, value: promisify(crypto, crypto.pbkdf2, 4) },
  pbkdf2Sync: { enumerable: true, value: crypto.pbkdf2Sync.bind(crypto) },
  prng: { enumerable: true, value: crypto.prng.bind(crypto) },
  pseudoRandomBytes: { enumerable: true, value: promisify(crypto, crypto.pseudoRandomBytes, 1) },
  pseudoRandomBytesSync: { enumerable: true, value: crypto.pseudoRandomBytes.bind(crypto) },
  randomBytes: { enumerable: true, value: promisify(crypto, crypto.randomBytes, 1) },
  randomBytesSync: { enumerable: true, value: crypto.randomBytes.bind(crypto) },
  rng: { enumerable: true, value: crypto.rng.bind(crypto) },
});